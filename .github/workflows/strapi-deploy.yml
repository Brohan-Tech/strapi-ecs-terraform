name: Deploy Strapi to AWS ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: strapi-app
  ECS_CLUSTER_NAME: rohana-strapi-cluster
  ECS_SERVICE_NAME: rohana-strapi-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate image tag
        id: tag
        run: |
          IMAGE_TAG=sha-$(git rev-parse --short HEAD)
          echo "tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "full_image=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.tag.outputs.full_image }} ./my-strapi-project

      - name: Push Docker image
        run: |
          docker push ${{ steps.tag.outputs.full_image }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_container_image: ${{ steps.tag.outputs.full_image }}
          TF_VAR_app_keys: ${{ secrets.APP_KEYS }}
          TF_VAR_admin_jwt_secret: ${{ secrets.ADMIN_JWT_SECRET }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_api_token_salt: ${{ secrets.API_TOKEN_SALT }}
          TF_VAR_task_role_arn: ${{ secrets.TASK_ROLE_ARN }}
          TF_VAR_execution_role_arn: ${{ secrets.EXECUTION_ROLE_ARN }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_container_image: ${{ steps.tag.outputs.full_image }}
          TF_VAR_app_keys: ${{ secrets.APP_KEYS }}
          TF_VAR_admin_jwt_secret: ${{ secrets.ADMIN_JWT_SECRET }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_api_token_salt: ${{ secrets.API_TOKEN_SALT }}
          TF_VAR_task_role_arn: ${{ secrets.TASK_ROLE_ARN }}
          TF_VAR_execution_role_arn: ${{ secrets.EXECUTION_ROLE_ARN }}

